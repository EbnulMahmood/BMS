@page "/Developer/Projects"
@using BMS.BlazorWebApp.Areas.Helper.Pages.Aleart
@using Microsoft.AspNetCore.Components.QuickGrid
@inherits ProjectListBase

<PageTitle>Project List</PageTitle>

<div class="container">
    @if (IsDisplayAddProduct == true)
    {
        <button type="button" class="btn btn-primary mb-2" @onclick="ToggleAddProduct">Add Product</button>
    }
    @if (IsDisplayAddProduct == false)
    {
        <AddProject OnProjectAddCompletedAsync="(args) => OnProjectAddCompletedAsync(args.Item1, args.Item2)" />
    }
    @if (Projects == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @if (IsDisplayAleart == true)
        {
            <DisplayAleart OnAleartDismissed="DismissAleart" Message="@Message" MessageType="@MessageType" />
        }

        <div class="grid">
            <QuickGrid Items="@FilteredItems" Pagination="@pagination">
                <PropertyColumn Property="@(p => p.Name)" Sortable="true" Class="project-name">
                    <ColumnOptions>
                        <div class="search-box">
                            <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Project name..." />
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Property="@(p => p.CreatedBy)" Title="Created By" Sortable="true" />
                <PropertyColumn Property="@(p => p.LastModifiedBy)" Title="Last Modified By" Sortable="true" />
                <PropertyColumn Property="@(p => p.CreatedOnUtc)" Title="Created On" Format="MM/dd/yyyy hh:mm tt" Sortable="true" />
                <PropertyColumn Property="@(p => p.LastModifiedOnUtc)" Title="Last Modified On" Format="MM/dd/yyyy hh:mm tt" Sortable="true" />
                <TemplateColumn Title="Actions" Align="Align.Center">
                    <button class="btn btn-outline-info" @onclick="async () => await EditAsync(context)">Details</button>
                    <button class="btn btn-outline-primary" @onclick="async () => await EditAsync(context)">Edit</button>
                    <button class="btn btn-outline-danger" @onclick="async () => await EditAsync(context)">Delete</button>
                </TemplateColumn>
            </QuickGrid>
        </div>
        <Paginator Value="@pagination" />
    }
</div>
